{"version":3,"sources":["components/ToDo.js","API/api.js","redux/actions.js","redux/types.js","components/ToDoTitle.js","components/Pagination.js","components/ToDoList.js","components/common/FormControl.js","components/common/validators.js","components/AddToDoForm.js","components/AddToDo.js","components/Header.js","components/AutorizationForm.js","components/Autorization.js","App.js","serviceWorker.js","redux/toDosReducer.js","redux/rootReducer.js","index.js"],"names":["ToDo","todoItem","deleteToDoThunk","changeStatusThunk","adminChangedThunk","isAuth","showAlert","useState","reductMode","setReductMode","todo","inputValue","setInputValue","name","email","autoFocus","value","onChange","e","currentTarget","type","onClick","id","className","role","s","status","checked","changed","getToDoAPI","page","count","axios","get","getSortNamesABCAPI","getSortNamesXYZAPI","getSortEmailABCAPI","getSortEmailXYZAPI","getSortTodosABCAPI","getSortTodosXYZAPI","addToDoAPI","body","post","deleteToDoAPI","delete","loginAPI","getAuthAPI","confirmAuthAPI","authStatus","auth","changeStatusAPI","adminChangedAPI","getToDos","payload","changeStatus","isAuthAction","text","dispatch","setTimeout","getSortNamesABCThunk","a","response","data","getSortNamesXYZThunk","getSortEmailABCThunk","getSortEmailXYZThunk","getSortTodosABCThunk","getSortTodosXYZThunk","getToDosThunk","getState","isNamesSorted","toDoDatas","isEmailSorted","isToDoSorted","getToDosCountThunk","confirmAuthThunk","ToDoTitle","currentPage","scope","width","Pagination","toDosCount","pageSize","onChangedPage","setCurrentPage","pagesCount","Math","ceil","pages","i","push","rightBorder","leftBorder","prevPage","filter","p","map","changePage","nextPage","connect","state","todos","alert","useEffect","t","key","length","style","textAlign","Textarea","input","meta","touched","error","warning","label","props","placeholder","color","Input","required","undefined","maxTextLength","max","notEmail","test","length20","length100","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","newToDo","addNewToDoThunk","values","trim","reqBody","Date","now","class","exact","to","autorization","loginThunk","Redirect","console","log","login","password","getAuthThunk","path","render","Boolean","window","location","hostname","match","Initialstate","rootReducer","combineReducers","action","q","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c474ca65.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\n\r\nconst ToDo = ({todoItem, deleteToDoThunk, changeStatusThunk, adminChangedThunk, isAuth, showAlert}) => {\r\n\r\n    const [reductMode, setReductMode] = useState(false)\r\n    const [inputValue, setInputValue] = useState(todoItem.todo)\r\n\r\n    const changeStatus = () => {\r\n        const s = todoItem.status === 1 ? 0 : 1\r\n        changeStatusThunk(s, todoItem.id)\r\n    }\r\n    const changeInputValue = (e) => {\r\n        setInputValue(e.currentTarget.value)\r\n    }\r\n    const saveAdminChanges = () => {\r\n        if (todoItem.todo !== inputValue) {\r\n            adminChangedThunk(todoItem.id, inputValue, 1)\r\n            setReductMode(false)\r\n        } else {\r\n            showAlert('There are no any changes')\r\n        }\r\n    }\r\n    const deleteTodo = () => {\r\n        deleteToDoThunk(todoItem.id)\r\n    }\r\n\r\n\r\n    return (\r\n        <tr>\r\n            <td>{todoItem.name}</td>\r\n            <td>{todoItem.email}</td>\r\n            {!isAuth ? <td>{todoItem.todo}</td>\r\n                :\r\n            <td> {reductMode ? <div><input autoFocus={true} value={inputValue} onChange={changeInputValue}/>\r\n                    <button type={\"button\"} onClick={saveAdminChanges} className={\"btn btn-dark btn-sm mt-n1 ml-2\"}>Save</button>\r\n                    <button type={\"button\"} onClick={() => setReductMode(false)} className={\"btn btn-dark btn-sm mt-n1 ml-2\"}>Exit</button>\r\n                </div>\r\n                : <span onClick={() => setReductMode(true)} role={\"button\"}>{todoItem.todo}</span>} </td>}\r\n            {isAuth ? <td className={\"text-center\"}><input type={'checkbox'} onClick={changeStatus} checked={todoItem.status}/></td>\r\n            : <td className={\"text-center\"}><input type={'checkbox'} checked={todoItem.status}/></td>}\r\n\r\n            <td className={\"text-center\"}><input type={'checkbox'} checked={todoItem.changed}/>\r\n            </td>\r\n            {isAuth == true && <td>\r\n                <button className={\"btn btn-dark\"} onClick={deleteTodo}>Delete Todo</button>\r\n            </td>}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ToDo\r\n","import axios from \"axios\";\r\n\r\n// export const instance = axios.create({\r\n//     baseURL: 'https://nj9eq.sse.codesandbox.io/api'\r\n// })\r\nexport const getToDoAPI = (page, count) => {\r\n    return axios.get(`/todos?page=${page}&count=${count}`)\r\n}\r\nexport const getSortNamesABCAPI = (page, count) => {\r\n    return axios.get(`/namesabc?page=${page}&count=${count}`)\r\n}\r\nexport const getSortNamesXYZAPI = (page, count) => {\r\n    return axios.get(`/nameszyx?page=${page}&count=${count}`)\r\n}\r\nexport const getSortEmailABCAPI = (page, count) => {\r\n    return axios.get(`/emailabc?page=${page}&count=${count}`)\r\n}\r\nexport const getSortEmailXYZAPI = (page, count) => {\r\n    return axios.get(`/emailzyx?page=${page}&count=${count}`)\r\n}\r\nexport const getSortTodosABCAPI = (page, count) => {\r\n    return axios.get(`/todosabc?page=${page}&count=${count}`)\r\n}\r\nexport const getSortTodosXYZAPI = (page, count) => {\r\n    return axios.get(`/todoszyx?page=${page}&count=${count}`)\r\n}\r\nexport const addToDoAPI = (body) => {\r\n    return axios.post('/addtodo', body)\r\n}\r\nexport const deleteToDoAPI = (id) => {\r\n    return axios.delete(`/delete/${id}`)\r\n}\r\nexport const getToDosCountAPI = () => {\r\n    return axios.get(`/count`)\r\n}\r\nexport const loginAPI = (body) => {\r\n    return axios.post(`/auth`, body)\r\n}\r\nexport const getAuthAPI = (id = 1) => {\r\n    return axios.get(`/getauth/${id}`)\r\n}\r\nexport const confirmAuthAPI = (authStatus, id) => {\r\n    return axios.post(`/authstatus`, {auth: authStatus, id})\r\n}\r\nexport const changeStatusAPI = (status, id) => {\r\n    return axios.post(`/updatestatus`, {status, id})\r\n}\r\nexport const adminChangedAPI = (id, todo, changed) => {\r\n    return axios.post(`/changed`, {id, todo, changed})\r\n}\r\n","import {\r\n    CHANGE_STATUS,\r\n    GET_AUTH,\r\n    GET_TODOS,\r\n    HIDE_ALERT,\r\n    IS_AUTH,\r\n    SHOW_ALERT,\r\n    SORT_EMAILS_BY_ABC,\r\n    SORT_EMAILS_BY_ZYX,\r\n    SORT_NAMES_BY_ABC,\r\n    SORT_NAMES_BY_ZYX,\r\n    SORT_TODOS_BY_ABC,\r\n    SORT_TODOS_BY_ZYX,\r\n    TODOS_COUNT,\r\n    SET_CURRENT_PAGE\r\n} from \"./types\";\r\nimport {\r\n    addToDoAPI,\r\n    adminChangedAPI,\r\n    changeStatusAPI,\r\n    confirmAuthAPI,\r\n    deleteToDoAPI,\r\n    getAuthAPI,\r\n    getSortEmailABCAPI,\r\n    getSortEmailXYZAPI,\r\n    getSortNamesABCAPI,\r\n    getSortNamesXYZAPI,\r\n    getSortTodosABCAPI,\r\n    getSortTodosXYZAPI,\r\n    getToDoAPI,\r\n    getToDosCountAPI,\r\n    loginAPI\r\n} from \"../API/api\";\r\n\r\nconst getToDos = (payload) => ({type: GET_TODOS, payload})\r\nconst getAuth = (payload) => ({type: GET_AUTH, payload})\r\nconst getToDosCount = (payload) => ({type: TODOS_COUNT, payload})\r\nconst changeStatus = (status, id) => ({type: CHANGE_STATUS, status, id})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const isAuthAction = (payload) => ({type: IS_AUTH, payload})\r\nexport const sortNamesByABC = () => ({type: SORT_NAMES_BY_ABC})\r\nexport const sortEmailsByABC = () => ({type: SORT_EMAILS_BY_ABC})\r\nexport const sortToDosByABC = () => ({type: SORT_TODOS_BY_ABC})\r\nexport const sortNamesByZYX = () => ({type: SORT_NAMES_BY_ZYX})\r\nexport const sortEmailsByZYX = () => ({type: SORT_EMAILS_BY_ZYX})\r\nexport const sortToDosByZYX = () => ({type: SORT_TODOS_BY_ZYX})\r\n\r\nexport const showAlert = (text) => dispatch => {\r\n    dispatch({\r\n        type: SHOW_ALERT,\r\n        payload: text\r\n    })\r\n    setTimeout(() => dispatch({\r\n        type: HIDE_ALERT\r\n    }), 1500)\r\n}\r\n\r\nexport const getSortNamesABCThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortNamesABCAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortNamesByABC())\r\n}\r\nexport const getSortNamesXYZThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortNamesXYZAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortNamesByZYX())\r\n}\r\nexport const getSortEmailABCThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortEmailABCAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortEmailsByABC())\r\n}\r\nexport const getSortEmailXYZThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortEmailXYZAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortEmailsByZYX())\r\n}\r\nexport const getSortTodosABCThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortTodosABCAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortToDosByABC())\r\n}\r\nexport const getSortTodosXYZThunk = (page = 0, count = 3) => async (dispatch) => {\r\n    const response = await getSortTodosXYZAPI(page, count)\r\n    dispatch(getToDos(response.data))\r\n    dispatch(sortToDosByZYX())\r\n}\r\nexport const getToDosThunk = (page = 0, count = 3) => async (dispatch, getState) => {\r\n    const isNamesSorted = getState().toDoDatas.isNamesSorted\r\n    const isEmailSorted = getState().toDoDatas.isEmailSorted\r\n    const isToDoSorted = getState().toDoDatas.isToDoSorted\r\n    const response = await getToDoAPI(page, count)\r\n    isNamesSorted === 0 ? dispatch(getSortNamesXYZThunk(page)) : isNamesSorted === 1 ? dispatch(getSortNamesABCThunk(page))\r\n        : isEmailSorted === 0 ? dispatch(getSortEmailXYZThunk(page)) : isEmailSorted === 1 ? dispatch(getSortEmailABCThunk(page))\r\n            : isToDoSorted === 0 ? dispatch(getSortTodosXYZThunk(page)) : isToDoSorted === 1 ? dispatch(getSortTodosABCThunk(page))\r\n                : dispatch(getToDos(response.data))\r\n}\r\n\r\nexport const getToDosCountThunk = () => async (dispatch) => {\r\n    const response = await getToDosCountAPI()\r\n    dispatch(getToDosCount(response.data))\r\n}\r\n\r\nexport const addNewToDoThunk = (body) => async (dispatch) => {\r\n        const response = await addToDoAPI(body)\r\n        dispatch(showAlert(response.data))\r\n}\r\n\r\nexport const deleteToDoThunk = (id) => async (dispatch, getState) => {\r\n    const page = getState().toDoDatas.currentPage - 1\r\n    const res = await getAuthAPI()\r\n    if (res.data.auth === 1) {\r\n        const response = await deleteToDoAPI(id)\r\n        dispatch(getToDosThunk(page))\r\n        dispatch(getToDosCountThunk())\r\n        dispatch(showAlert(response.data))\r\n    } else {\r\n        dispatch(showAlert('You are not autorized'))\r\n        dispatch(isAuthAction(0))\r\n    }\r\n}\r\nexport const getAuthThunk = (id) => async (dispatch) => {\r\n    const response = await getAuthAPI(id)\r\n    dispatch(isAuthAction(response.data.auth))\r\n}\r\nexport const confirmAuthThunk = (authStatus, id = 1) => async (dispatch) => {\r\n    const response = await confirmAuthAPI(authStatus, id)\r\n}\r\n\r\nexport const loginThunk = (body) => async (dispatch) => {\r\n    const response = await loginAPI(body)\r\n    if (response.data) {\r\n        dispatch(getAuth(response.data))\r\n        dispatch(isAuthAction(1))\r\n        dispatch(confirmAuthThunk(1, response.data.id))\r\n    } else {\r\n        dispatch(showAlert('Invalid login or password!'))\r\n    }\r\n}\r\nexport const changeStatusThunk = (status, id) => async (dispatch) => {\r\n    const res = await getAuthAPI()\r\n    if (res.data.auth === 1) {\r\n        const response = await changeStatusAPI(status, id)\r\n        dispatch(changeStatus(status, id))\r\n    } else {\r\n        dispatch(showAlert('You are not autorized'))\r\n        dispatch(isAuthAction(0))\r\n    }\r\n}\r\nexport const adminChangedThunk = (id, todo, changed) => async (dispatch, getState) => {\r\n    const page = getState().toDoDatas.currentPage - 1\r\n    const res = await getAuthAPI()\r\n    if (res.data.auth === 1) {\r\n        const response = await adminChangedAPI(id, todo, changed)\r\n        dispatch(getToDosThunk(page))\r\n    } else {\r\n        dispatch(showAlert('You are not autorized'))\r\n        dispatch(isAuthAction(0))\r\n    }\r\n}","export const GET_TODOS = 'GET_TODOS'\r\nexport const TODOS_COUNT = 'TODOS_COUNT'\r\nexport const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SORT_NAMES_BY_ABC = 'SORT_NAMES_BY_ABC'\r\nexport const SORT_EMAILS_BY_ABC = 'SORT_EMAILS_BY_ABC'\r\nexport const SORT_TODOS_BY_ABC = 'SORT_TODOS_BY_ABC'\r\nexport const SORT_NAMES_BY_ZYX = 'SORT_NAMES_BY_ZYX'\r\nexport const SORT_EMAILS_BY_ZYX = 'SORT_EMAILS_BY_ZYX'\r\nexport const SORT_TODOS_BY_ZYX = 'SORT_TODOS_BY_ZYX'\r\nexport const GET_AUTH = 'GET_AUTH'\r\nexport const IS_AUTH = 'IS_AUTH'\r\nexport const CHANGE_STATUS = 'CHANGE_STATUS'\r\nexport const ADMIN_CHANGED = 'ADMIN_CHANGED'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\n","import React from 'react';\r\n\r\nconst ToDoTitle = ({isAuth, isNamesSorted, isEmailSorted, isToDoSorted, getSortNamesABCThunk, currentPage, getSortNamesXYZThunk, getSortEmailABCThunk,\r\n                       getSortEmailXYZThunk, getSortTodosABCThunk, getSortTodosXYZThunk}) => {\r\n\r\n    const sortNames = () => {\r\n        if (!isNamesSorted) {\r\n            getSortNamesABCThunk(currentPage-1)\r\n        } else if (isNamesSorted === 1) {\r\n            getSortNamesXYZThunk(currentPage-1)\r\n        }\r\n    }\r\n    const sortEmails = () => {\r\n        if (!isEmailSorted) {\r\n            getSortEmailABCThunk(currentPage-1)\r\n        } else if (isEmailSorted === 1) {\r\n            getSortEmailXYZThunk(currentPage-1)\r\n        }\r\n    }\r\n    const sortToDos = () => {\r\n        if (!isToDoSorted) {\r\n            getSortTodosABCThunk(currentPage-1)\r\n        } else if (isToDoSorted === 1) {\r\n            getSortTodosXYZThunk(currentPage-1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"col\" className={\"align-middle \"}><button onClick={sortNames} type={\"button\"} className={\"btn btn-dark\"}>Name\r\n                {isNamesSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isNamesSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" className={\"align-middle \"}><button onClick={sortEmails} type={\"button\"} className={\"btn btn-dark\"}>Email\r\n                {isEmailSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isEmailSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" width={400} className={\"align-middle \"}><button onClick={sortToDos} type={\"button\"} className={\"btn btn-dark\"}>ToDo Description\r\n                {isToDoSorted === 0 ? <i className=\"large material-icons\">expand_more</i> : isToDoSorted === 1 ? <i className=\"large material-icons\">expand_less</i> : null }\r\n            </button></th>\r\n            <th scope=\"col\" width={100} className={\"align-middle text-center\"}>Status</th>\r\n            <th scope=\"col\" width={100} className={\"align-middle text-center\"}>Changed by Administrator</th>\r\n            {isAuth == true && <th scope=\"col\" width={150} className={\"align-middle \"}>Delete Todo</th>}\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default ToDoTitle","import React from \"react\";\r\n\r\n\r\nexport const Pagination = ({toDosCount, pageSize, onChangedPage, currentPage, setCurrentPage, ...props}) => {\r\n\r\n    const pagesCount = Math.ceil(toDosCount / pageSize);\r\n    if (pagesCount < currentPage && currentPage !== 1) {\r\n        setCurrentPage(currentPage-1)\r\n    }\r\n\r\n    const pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const changePage = (p) => {\r\n        onChangedPage(p - 1)\r\n        setCurrentPage(p)\r\n    }\r\n    const prevPage = (currentPage) => {\r\n        onChangedPage(currentPage - 2)\r\n        setCurrentPage(currentPage - 1)\r\n    }\r\n    const nextPage = (currentPage) => {\r\n        onChangedPage(currentPage)\r\n        setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    const rightBorder = ((pagesCount - currentPage) > 10 && currentPage <= 4) ? 10 : ((pagesCount - currentPage) >= 6 && currentPage > 4) ? currentPage + 5 : pagesCount\r\n    const leftBorder = (pagesCount - currentPage) < 5 ? (pagesCount - 9): currentPage > 4 ? currentPage - 4 : 1\r\n\r\n    return <div className={\"d-flex justify-content-center \"}>\r\n        <ul className={\"pagination \"} role={\"button\"}>\r\n            {pagesCount > 0 && <li className={`page-item ${currentPage === 1 ? \"disabled\" : null}`}><span className={\"page-link btn btn-dark\"}\r\n                                              onClick={() => prevPage(currentPage)}>\r\n            Previous</span></li>}\r\n            {pages.filter(p => rightBorder >= p && p >= leftBorder).map(p => {\r\n                return <li className={`page-item ${currentPage === p ? \"active\": null}`}><span className={\"page-link\"}\r\n                                                         onClick={() => changePage(p)}>{p}</span></li>\r\n            })\r\n            }\r\n            {pagesCount > 0 && <li className={`page-item ${currentPage === pagesCount ? \"disabled\" : null}`}><span className={\"page-link\"}\r\n                                              onClick={() => nextPage(currentPage)}>\r\n                Next</span></li>}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Pagination","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport ToDo from \"./ToDo\";\r\nimport {\r\n    adminChangedThunk,\r\n    changeStatusThunk,\r\n    confirmAuthThunk,\r\n    deleteToDoThunk,\r\n    getSortEmailABCThunk,\r\n    getSortEmailXYZThunk,\r\n    getSortNamesABCThunk,\r\n    getSortNamesXYZThunk,\r\n    getSortTodosABCThunk,\r\n    getSortTodosXYZThunk,\r\n    getToDosCountThunk,\r\n    getToDosThunk,\r\n    setCurrentPage,\r\n    showAlert\r\n} from \"../redux/actions\";\r\nimport ToDoTitle from \"./ToDoTitle\";\r\nimport Pagination from \"./Pagination\";\r\n\r\n\r\nconst ToDoList = ({todos, getToDosThunk, deleteToDoThunk, getToDosCountThunk, pageSize, toDosCount, isAuth, showAlert, currentPage, setCurrentPage, alert, changeStatusThunk, adminChangedThunk,\r\n                      isNamesSorted, isEmailSorted, isToDoSorted, getSortNamesABCThunk, getSortNamesXYZThunk, getSortEmailABCThunk, getSortEmailXYZThunk,\r\n                      getSortTodosABCThunk, getSortTodosXYZThunk\r\n                  }) => {\r\n\r\n    useEffect(() => {\r\n        getToDosThunk(currentPage - 1)\r\n        getToDosCountThunk()\r\n    }, [currentPage])\r\n\r\n    const onChangedPage = (page) => {\r\n        getToDosThunk(page)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {alert && <div className=\"alert alert-danger mt-5 mb-n4\" role=\"alert\">\r\n                {alert}\r\n            </div>}\r\n            <table className=\"table table-striped align-middle table-hover mt-5 mb-5 \">\r\n                <thead className={\"thead-dark\"}>\r\n                <ToDoTitle isAuth={isAuth}\r\n                           isNamesSorted={isNamesSorted}\r\n                           isEmailSorted={isEmailSorted}\r\n                           isToDoSorted={isToDoSorted}\r\n                           getSortNamesABCThunk={getSortNamesABCThunk}\r\n                           currentPage={currentPage}\r\n                           getSortNamesXYZThunk={getSortNamesXYZThunk}\r\n                           getSortEmailABCThunk={getSortEmailABCThunk}\r\n                           getSortEmailXYZThunk={getSortEmailXYZThunk}\r\n                           getSortTodosABCThunk={getSortTodosABCThunk}\r\n                           getSortTodosXYZThunk={getSortTodosXYZThunk}\r\n                />\r\n                </thead>\r\n                <tbody>\r\n                {todos.map(t => <ToDo todoItem={t}\r\n                                          key={t.id}\r\n                                          deleteToDoThunk={deleteToDoThunk}\r\n                                          changeStatusThunk={changeStatusThunk}\r\n                                          adminChangedThunk={adminChangedThunk}\r\n                                          isAuth={isAuth}\r\n                                          showAlert={showAlert}\r\n                />)}\r\n                </tbody>\r\n            </table>\r\n            {todos.length == 0 && <h1 style={{textAlign: 'center'}}>You don`t have tasks</h1>}\r\n            <Pagination toDosCount={toDosCount}\r\n                        pageSize={pageSize}\r\n                        onChangedPage={onChangedPage}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={setCurrentPage}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.toDoDatas.todos,\r\n    toDosCount: state.toDoDatas.toDosCount,\r\n    pageSize: state.toDoDatas.pageSize,\r\n    alert: state.toDoDatas.alert,\r\n    auth: state.toDoDatas.auth,\r\n    isAuth: state.toDoDatas.isAuth,\r\n    currentPage: state.toDoDatas.currentPage,\r\n    isNamesSorted: state.toDoDatas.isNamesSorted,\r\n    isEmailSorted: state.toDoDatas.isEmailSorted,\r\n    isToDoSorted: state.toDoDatas.isToDoSorted\r\n})\r\nexport default connect(mapStateToProps, {getToDosThunk,\r\n    deleteToDoThunk,\r\n    getToDosCountThunk,\r\n    confirmAuthThunk,\r\n    changeStatusThunk,\r\n    adminChangedThunk,\r\n    showAlert,\r\n    setCurrentPage,\r\n    getSortNamesABCThunk,\r\n    getSortNamesXYZThunk,\r\n    getSortEmailABCThunk,\r\n    getSortEmailXYZThunk,\r\n    getSortTodosABCThunk,\r\n    getSortTodosXYZThunk\r\n})(ToDoList)\r\n","import React from \"react\";\r\n\r\nexport const Textarea = ({input, meta: {touched, error, warning}, label, ...props}) => {\r\n    return <div>\r\n        <div className={\"form-group\"}>\r\n            <textarea className={\"form-control\"} placeholder={label} {...input} {...props} />\r\n            {touched &&\r\n            ((error && <span style={{color: 'red'}}>{error}</span>) ||\r\n                (warning && <span style={{color: 'red'}}>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const Input = ({input, label, meta: {touched, error, warning}, ...props}) => {\r\n    return <div>\r\n        <div className={\"form-group\"}>\r\n            <input className={\"form-control\"} placeholder={label} {...input} {...props} />{props.text}\r\n            {touched &&\r\n            ((error && <span style={{color: 'red'}}>{error}</span>) ||\r\n                (warning && <span style={{color: 'red'}}>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n}\r\n","export const required = value => value ? undefined : '! Required';\r\n\r\nexport const maxTextLength = max=> value =>\r\n    value && value.length > max ? `! Must be ${max} characters or less` : undefined;\r\n\r\nexport const notEmail = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n        ? '! Invalid email address'\r\n        : undefined;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"./common/FormControl\";\r\nimport {maxTextLength, notEmail, required} from \"./common/validators\";\r\n\r\nconst length20 = maxTextLength(20)\r\nconst length100 = maxTextLength(100)\r\n\r\nconst AddToDoForm = ({handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input} name={'name'} label={'Your name'} validate={[required, length20]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} name={'email'} label={'Your email'} validate={[required, notEmail]} type={'email'}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Textarea} name={'todo'} label={'Description of new ToDo'} validate={[required, length100]}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" className={\"btn btn-dark\"}>Add new ToDo</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'newToDo'})(AddToDoForm);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addNewToDoThunk, getToDosThunk} from \"../redux/actions\";\r\nimport AddToDoForm from \"./AddToDoForm\";\r\n\r\n\r\nconst AddToDo = ({addNewToDoThunk, newToDo, alert, getToDosThunk}) => {\r\n\r\n    const addNewToDo = (values) => {\r\n        if (values.name.trim().length > 0 && values.email.trim().length > 0 && values.todo.trim().length > 0) {\r\n            const reqBody = {\r\n                id: Date.now(),\r\n                name: values.name,\r\n                email: values.email,\r\n                todo: values.todo,\r\n                status: 0,\r\n                changed: 0\r\n            }\r\n            addNewToDoThunk(reqBody)\r\n            getToDosThunk()\r\n            newToDo.values.name = newToDo.values.email = newToDo.values.todo = ''\r\n        }\r\n    }\r\n    return (\r\n        <div className={\"mt-5\"}>\r\n            {alert && <div className=\"alert alert-success\" role=\"alert\">\r\n                    {alert}\r\n                </div>}\r\n            <AddToDoForm onSubmit={addNewToDo}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: state.toDoDatas.todos,\r\n    alert: state.toDoDatas.alert,\r\n    newToDo: state.form.newToDo,\r\n})\r\nexport default connect(mapStateToProps, {addNewToDoThunk, getToDosThunk})(AddToDo)\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {confirmAuthThunk, isAuthAction} from \"../redux/actions\";\r\n\r\n\r\nconst Header = ({isAuth, confirmAuthThunk, isAuthAction}) => {\r\n\r\n    const logout = () => {\r\n        confirmAuthThunk(0)\r\n        isAuthAction(0)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark view overlay\">\r\n            <div className={\"container view overlay\"}>\r\n                <div>\r\n                    <button type=\"button\" class=\"btn btn-dark\">\r\n                        <NavLink exact to={'/'} className=\"navbar-brand\">\r\n                            Home\r\n                        </NavLink>\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-dark\">\r\n                        <NavLink exact to={'/addtask'} className=\"navbar-brand\">\r\n                            Add Task\r\n                        </NavLink>\r\n                    </button>\r\n                </div>\r\n                <div>\r\n                    { isAuth ? <button onClick={logout} type=\"button\" className=\"btn btn-light\">Logout</button>\r\n                        :\r\n                    <NavLink exact to={'/auth'} className=\"nav-link\">\r\n                        <button type=\"button\" className=\"btn btn-light\">Loginning</button>\r\n                    </NavLink> }\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.toDoDatas.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {confirmAuthThunk, isAuthAction})(Header)\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"./common/FormControl\";\r\nimport {required} from \"./common/validators\"\r\n\r\nconst AutorizationForm = ({handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field component={Input} name={'login'} label={'Your login'} validate={[required]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} name={'password'} label={'Your password'} validate={[required]}\r\n                   type={'password'}/>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" className={\"btn btn-dark\"}>Login</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default reduxForm({form: 'autorization'})(AutorizationForm)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport AutorizationForm from \"./AutorizationForm\";\r\nimport {loginThunk, showAlert} from \"../redux/actions\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\n\r\nconst Autorization = ({autorization, alert, loginThunk, isAuth, showAlert}) => {\r\n\r\n    const loginning = (values) => {\r\n        console.log(values)\r\n        if (values.login.trim().length > 0 && values.password.trim().length > 0) {\r\n            const reqBody = {\r\n                login: values.login,\r\n                password: values.password\r\n            }\r\n            loginThunk(reqBody)\r\n            autorization.values.login = autorization.values.password = ''\r\n        } else {\r\n            showAlert('The fields are empty')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {isAuth == true && <Redirect to={'/'}/>}\r\n            {alert && <div className=\"alert alert-danger mt-3\" role=\"alert\">\r\n                {alert}\r\n            </div>}\r\n            <div className={\"d-flex justify-content-center mt-5\"}>\r\n                <AutorizationForm onSubmit={loginning}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    alert: state.toDoDatas.alert,\r\n    autorization: state.form.autorization,\r\n    isAuth: state.toDoDatas.isAuth\r\n})\r\nexport default connect(mapStateToProps, {loginThunk, showAlert})(Autorization)\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport ToDoList from \"./components/ToDoList\";\nimport AddToDo from \"./components/AddToDo\";\nimport Header from \"./components/Header\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport Autorization from \"./components/Autorization\";\nimport {connect} from \"react-redux\";\nimport {getAuthThunk} from \"./redux/actions\";\n\nfunction App({getAuthThunk}) {\n\n    useEffect(() => {\n        getAuthThunk()\n    }, [])\n    return (\n        <>\n            <Header/>\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path={'/'}\n                           render={() => <ToDoList/>}/>\n                    <Route exact path={'/addtask'}\n                           render={() => <AddToDo/>}/>\n                    <Route exact path={'/auth'}\n                           render={() => <Autorization/>}/>\n                    <Redirect to={'/tasks'}/>\n                </Switch>\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, {getAuthThunk})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    ADMIN_CHANGED,\r\n    CHANGE_STATUS,\r\n    GET_AUTH,\r\n    GET_TODOS,\r\n    HIDE_ALERT,\r\n    IS_AUTH,\r\n    SHOW_ALERT,\r\n    SORT_EMAILS_BY_ABC,\r\n    SORT_EMAILS_BY_ZYX,\r\n    SORT_NAMES_BY_ABC,\r\n    SORT_NAMES_BY_ZYX,\r\n    SORT_TODOS_BY_ABC,\r\n    SORT_TODOS_BY_ZYX,\r\n    TODOS_COUNT,\r\n    SET_CURRENT_PAGE\r\n} from \"./types\";\r\n\r\nconst Initialstate = {\r\n    todos: [],\r\n    toDosCount: null,\r\n    pageSize: 3,\r\n    currentPage: 1,\r\n    alert: null,\r\n    auth: null,\r\n    isAuth: 0,\r\n    isNamesSorted: null,\r\n    isEmailSorted: null,\r\n    isToDoSorted: null,\r\n}\r\n\r\nexport const toDosReducer = (state = Initialstate, action) => {\r\n    switch (action.type) {\r\n        case GET_TODOS:\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            }\r\n        case TODOS_COUNT:\r\n            return {\r\n                ...state,\r\n                toDosCount: action.payload.q\r\n            }\r\n        case GET_AUTH:\r\n            return {\r\n                ...state,\r\n                auth: action.payload\r\n            }\r\n        case IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case CHANGE_STATUS:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(t => {\r\n                    if (t.id === action.id) {\r\n                        return { ...t, status: action.status}\r\n                    }\r\n                    return t\r\n                })\r\n            }\r\n        case ADMIN_CHANGED:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(t => {\r\n                    if (t.id === action.id) {\r\n                        return { ...t, changed: action.changed}\r\n                    }\r\n                    return t\r\n                })\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SHOW_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: action.payload\r\n            }\r\n        case HIDE_ALERT:\r\n            return {\r\n                ...state,\r\n                alert: null\r\n            }\r\n        case SORT_NAMES_BY_ABC:\r\n            return {\r\n                ...state,\r\n                isNamesSorted: 1,\r\n                isEmailSorted: null,\r\n                isToDoSorted: null\r\n            }\r\n        case SORT_NAMES_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                isNamesSorted: 0,\r\n            }\r\n        case SORT_EMAILS_BY_ABC:\r\n            return {\r\n                ...state,\r\n                isNamesSorted: null,\r\n                isEmailSorted: 1,\r\n                isToDoSorted: null\r\n            }\r\n        case SORT_EMAILS_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                isEmailSorted: 0,\r\n            }\r\n        case SORT_TODOS_BY_ABC:\r\n            return {\r\n                ...state,\r\n                isNamesSorted: null,\r\n                isEmailSorted: null,\r\n                isToDoSorted: 1\r\n            }\r\n        case SORT_TODOS_BY_ZYX:\r\n            return {\r\n                ...state,\r\n                isToDoSorted: 0,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\"\r\nimport {toDosReducer} from \"./toDosReducer\"\r\nimport {reducer as formReducer} from \"redux-form\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    toDoDatas: toDosReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from \"redux-thunk\";\nimport {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}